// <auto-generated />
using System;
using Delivery.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Delivery.Infrastructure.Migrations.AppDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250706045612_initialApp")]
    partial class initialApp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Delivery.Domain.Parametros.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Abreviatura")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<int?>("Dependencia")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<int?>("Nivel")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Valor")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("Id");

                    b.HasIndex("Dependencia");

                    b.ToTable("parametros", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "PROVEEDOR OAUTH2"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Dependencia = 1,
                            Nivel = 1,
                            Nombre = "google",
                            Valor = "1"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Dependencia = 1,
                            Nivel = 1,
                            Nombre = "facebook",
                            Valor = "2"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Dependencia = 1,
                            Nivel = 1,
                            Nombre = "instagram",
                            Valor = "3"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Nivel = 0,
                            Nombre = "Estados Pedido"
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            Dependencia = 5,
                            Nivel = 1,
                            Nombre = "Recibido",
                            Valor = "1"
                        },
                        new
                        {
                            Id = 7,
                            Activo = true,
                            Dependencia = 5,
                            Nivel = 1,
                            Nombre = "Preparando",
                            Valor = "2"
                        },
                        new
                        {
                            Id = 8,
                            Activo = true,
                            Dependencia = 5,
                            Nivel = 1,
                            Nombre = "En camino",
                            Valor = "3"
                        },
                        new
                        {
                            Id = 9,
                            Activo = true,
                            Dependencia = 5,
                            Nivel = 1,
                            Nombre = "Entregado",
                            Valor = "4"
                        });
                });

            modelBuilder.Entity("Delivery.Domain.Usuarios.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("Apellidos")
                        .HasColumnType("text");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Dni")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<bool>("IsDefaultPassword")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombres")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.HasIndex("Dni")
                        .IsUnique();

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("Delivery.Domain.Parametros.Parametro", b =>
                {
                    b.HasOne("Delivery.Domain.Parametros.Parametro", null)
                        .WithMany()
                        .HasForeignKey("Dependencia");
                });
#pragma warning restore 612, 618
        }
    }
}
